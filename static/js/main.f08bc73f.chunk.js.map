{"version":3,"sources":["redux/actions.js","redux/index.js","components/RestaurantCard/RestaurantCard.js","components/RestaurantsListPage/RestaurantsListPage.js","redux/selectors.js","components/RestaurantsListPage/index.js","components/Input/Input.js","components/Header/Header.js","components/Header/index.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ACTION_TYPES","SAVE_RESTAURANTS_LIST","SET_SEARCH_VALUE","SET_INPUT_VALUE","setInputValue","name","value","type","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","initialState","restaurantsListData","inputValues","address","time","search","store","createStore","state","action","searchValue","applyMiddleware","RestaurantCard","props","imageUrl","etaRange","uuid","title","categories","className","src","alt","join","defaultProps","RestaurantsListPage","this","loadData","restaurantCards","restaurantsData","map","heroImageUrl","key","text","Component","selectRestaurantsList","createSelector","feedItems","storesMap","restaurantsList","filter","restaurant","toLowerCase","startsWith","includes","mapDispatch2Props","dispatch","fetch","then","res","json","data","saveRestaurantsList","EnchancedListPage","connect","Input","isFocused","inputRef","createRef","handleFocus","setState","handleBlur","focusControl","current","focus","iconUrl","onChange","placeholder","rootClass","onClick","ref","onFocus","onBlur","PureComponent","placeHolder","Header","handleChange","target","changeInputValue","date","Date","timeNow","getHours","getMinutes","href","mapDispatch2props","headerHandler","Footer","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f08bc73f.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SAVE_RESTAURANTS_LIST: 'SAVE_RESTAURANTS_LIST',\n  SET_SEARCH_VALUE: 'SET_SEARCH_VALUE',\n  SET_INPUT_VALUE: 'SET_INPUT_VALUE'\n};\n\nconst saveRestaurantsList = data => ({\n  type: ACTION_TYPES.SAVE_RESTAURANTS_LIST,\n  payload: data\n});\n\nconst searchRequest = value => ({\n  type: ACTION_TYPES.SET_SEARCH_VALUE,\n  payload: value\n});\n\nconst setInputValue = (name, value) => ({\n  type: ACTION_TYPES.SET_INPUT_VALUE,\n  payload: value,\n  name\n});\n\nexport const getTime = () => dispatch => {\n  let date = new Date();\n  let timeNow = `${date.getHours()}:${date.getMinutes()}`;\n  dispatch(setInputValue('time', timeNow));\n};\nexport const changeInputValue = (name, value) => dispatch => {\n  dispatch(setInputValue(name, value));\n};\n\nexport const changeRestaurantList = value => dispatch => {\n  dispatch(searchRequest(value));\n};\n\nexport const loadRestaurantsList = () => dispatch => {\n  fetch('https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants')\n    .then(res => res.json())\n    .then(({ data }) => {\n      dispatch(saveRestaurantsList(data));\n    });\n};\n","import { compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { applyMiddleware } from 'redux';\nimport { ACTION_TYPES } from './actions';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst middlewares = [thunk];\n\nconst initialState = {\n  restaurantsListData: null,\n  inputValues: {\n    address: '',\n    time: '',\n    search: ''\n  }\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE_RESTAURANTS_LIST:\n      return {\n        ...state,\n        restaurantsListData: action.payload\n      };\n    case ACTION_TYPES.SET_SEARCH_VALUE:\n      return {\n        ...state,\n        searchValue: action.payload\n      };\n    case ACTION_TYPES.SET_INPUT_VALUE:\n      return {\n        ...state,\n        inputValues: { \n          ...state.inputValues, \n          [action.name]: action.payload }\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RestaurantCard.scss';\n\nexport const RestaurantCard = props => {\n  const { imageUrl, uuid, etaRange, title, categories } = props;\n  return (\n    <div className='restaurant-card'>\n      <div className='restaurant-card__img-wrapper'>\n        <img src={imageUrl} alt={title} className='restaurant-card__img' />\n      </div>\n      \n      <h2 className='restaurant-card__title'>{title}</h2>\n      <div className='restaurant-card__categories'>\n        {categories.join(' â€¢ ')}\n      </div>\n      <div className='restaurant-card__eta'>{etaRange}</div>\n    </div>\n  );\n};\n\nRestaurantCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  uuid: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  etaRange: PropTypes.string,\n  categories: PropTypes.arrayOf(PropTypes.string)\n};\n\nRestaurantCard.defaultProps = {\n  categories: [],\n  etaRange: ''\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { RestaurantCard } from '../RestaurantCard/RestaurantCard';\nimport './RestaurantsListPage.scss';\n\nconst defaultEtaRange = '20-30 min';\n\nexport class RestaurantsListPage extends Component {\n  componentDidMount() {\n    this.props.loadData();\n  }\n\n  render() {\n    const restaurantCards = this.props.restaurantsData.map(\n      ({ title, uuid, etaRange, categories, heroImageUrl }) => {\n        return (\n          <RestaurantCard\n            key={uuid}\n            title={title}\n            uuid={uuid}\n            etaRange={etaRange.text || defaultEtaRange}\n            categories={categories}\n            imageUrl={heroImageUrl}\n            />\n            );\n          }\n          );\n\n      return <div className='restaurants-list'>{restaurantCards}</div>;\n    }\n}\n\nRestaurantsListPage.propTypes = {\n  restaurantsData: PropTypes.arrayOf(PropTypes.shape({})),\n  loadData: PropTypes.func.isRequired\n};\n\nRestaurantsListPage.defaultProps = {\n  restaurantsData: []\n};\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRestaurantsList = createSelector(\n  rootSelector,\n  ({ restaurantsListData, inputValues }) => {\n    if (!restaurantsListData) {\n      return [];\n    } else {\n      const { feedItems, storesMap } = restaurantsListData;\n      const { search } = inputValues\n      const restaurantsList = feedItems.map(({ uuid }) => storesMap[uuid]);\n\n      if (search) {\n        const searchFilter = restaurant => {\n          const { title, categories } = restaurant;\n          return (\n            title.toLowerCase().startsWith(search) ||\n            categories\n              .join()\n              .toLowerCase()\n              .includes(search)\n          );\n        };\n\n        return restaurantsList.filter(searchFilter);\n      }\n\n      return restaurantsList;\n    }\n  }\n);\n","import { RestaurantsListPage } from './RestaurantsListPage';\nimport { connect } from 'react-redux';\nimport { loadRestaurantsList } from '../../redux/actions';\nimport { selectRestaurantsList } from '../../redux/selectors';\n\nfunction mapState2Props(state) {\n  return {\n  restaurantsData: selectRestaurantsList(state),\n  }\n};\n\nconst mapDispatch2Props =  {\n  loadData: loadRestaurantsList,\n};\n\nconst EnchancedListPage = connect(mapState2Props, mapDispatch2Props)(RestaurantsListPage);\n\nexport { EnchancedListPage as RestaurantsListPage };","import React, { PureComponent, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './Input.scss';\n\n\nexport class Input extends PureComponent {\n  state = {\n    isFocused: false\n  }\n  inputRef = createRef();\n\n  handleFocus = () => this.setState({isFocused: true});\n\n  handleBlur = () => this.setState({isFocused: false});\n\n  focusControl = () => this.inputRef.current.focus()\n\n  render() {\n    const {\n      iconUrl,\n      value,\n      onChange,\n      type,\n      name,\n      placeholder,\n      className\n    } = this.props;\n    const { isFocused } = this.state;\n    const rootClass = `control ${isFocused ? \"control--focused\" : \"\"} ${className}`;\n\n    return (\n      <div \n        className={rootClass}\n        onClick={this.focusControl}>\n        {!!iconUrl && (\n          <img src={iconUrl} alt={placeholder} className='control__icon' />\n        )}\n        <input\n          ref={this.inputRef}\n          className='control__input'\n          type={type}\n          value={value}\n          name={name}\n          onChange={onChange}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          placeholder={placeholder}\n        />\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  iconUrl: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string\n};\n\nInput.defaultProps = {\n  iconUrl: '',\n  type: 'text',\n  placeHolder: '',\n  className: ''\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\nimport { Input } from '../Input/Input';\n\nexport class Header extends Component {\n  componentDidMount() {\n    let date = new Date();\n    let timeNow = `${date.getHours()}:${date.getMinutes()}`;\n    this.props.changeInputValue('time', timeNow);\n  }\n\n  handleChange = ({ target }) => {\n    this.props.changeInputValue(target.name, target.value);\n  };\n\n  render() {\n    const { address, time, search } = this.props.inputValues;\n\n    return (\n      <header className='header'>\n        <div className='content'>\n          <div className='header__inner'>\n            <img\n              src='./images/logo.svg'\n              alt='UberEats'\n              className='header__logo'\n            />\n            <div className='header__delivery-info'>\n              <Input\n                name='address'\n                onChange={this.handleChange}\n                value={address}\n                placeholder='Address'\n                iconUrl='./images/place.svg'\n              />\n              <Input\n                name='time'\n                onChange={this.handleChange}\n                value={time}\n                placeholder='Deliver now'\n                iconUrl='./images/time.svg'\n                type='time'\n              />\n            </div>\n            <Input\n              name='search'\n              onChange={this.handleChange}\n              value={search}\n              placeholder='Search'\n              iconUrl='./images/search.svg'\n              className='header__search'\n            />\n            <a className='header__link' href='/sign-in'>\n              Sign In\n            </a>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  changeRestaurantList: PropTypes.func.isRequired,\n  inputValues: PropTypes.object\n};\n\nHeader.defaultProps = {\n  inputValues: {}\n};\n","import { Header } from './Header';\nimport { changeInputValue } from '../../redux/actions';\nimport { connect } from 'react-redux';\n\nconst mapState2props = (state) => ({\n  inputValues: state.inputValues\n});\n\nconst mapDispatch2props = {\n  changeInputValue\n}\n\nconst headerHandler = connect(mapState2props, mapDispatch2props)(Header);\n\nexport { headerHandler as Header };\n","import React from 'react';\nimport './Footer.scss';\n\nexport const Footer = () => {\n  return (\n    <footer className='footer'>\n      <div className='content'>\n        <div className='footer__top'>\n          <div className='footer__main'>\n            <div className='footer__logo-lang'>\n              <img\n                className='footer__logo'\n                src='./images/logo-white.svg'\n                alt='uber eats'\n              />\n              <div className='footer__lang'>Language</div>\n            </div>\n\n            <div className='footer__mobile-apps'>\n              <a href='#' className='footer__mobile-app'>\n                <img src='./images/appstore.png' alt='appstore' />\n              </a>\n              <a href='#' className='footer__mobile-app'>\n                <img src='./images/googleplay.png' alt='googleplay' />\n              </a>\n            </div>\n          </div>\n\n          <div className='footer__top-links links'>\n            <a className='links__link links__link--weight' href='#'>\n              About UberEats\n            </a>\n            <a className='links__link' href='#'>\n              Read our blog\n            </a>\n            <a className='links__link' href='#'>\n              Sign up to deliver\n            </a>\n            <a className='links__link' href='#'>\n              Add your restaurant\n            </a>\n          </div>\n          <div className='footer__top-links links'>\n            <a className='links__link links__link--weight' href='#'>Get help</a>\n            <a className='links__link' href='#'>Read FAQs</a>\n            <a className='links__link' href='#'>View all cities</a>\n          </div>\n        </div>\n\n        <div className='footer__separator'></div>\n\n        <div className='footer__bottom'>\n          <p className='footer__copyrights'>Â© 2019 Uber Technologies Inc.a</p>\n          <div className='footer__misc'>\n            <div className='footer__bottom-links links'>\n              <a className='links__link' href='#'>\n                Privacy policy\n              </a>\n              <a className='links__link' href='#'>\n                Terms of use\n              </a>\n              <a className='links__link' href='#'>\n                Pricing\n              </a>\n            </div>\n\n            <div className='footer__social  social'>\n              <a className='social__link' href='#'>\n                <img src='./images/fb.svg' alt='facebook'/>\n              </a>\n              <a className='social__link' href='#'>\n                <img src='./images/twitter.svg' alt='twitter'/>\n              </a>\n              <a className='social__link' href='#'>\n                <img src='./images/instagram.svg' alt='instagram'/>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/index';\nimport { RestaurantsListPage } from './components/RestaurantsListPage/index';\nimport { Header } from './components/Header/index';\nimport { Footer } from './components/Footer/Footer';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <main className=\"content\">\n          <RestaurantsListPage />\n        </main>\n        <Footer />\n      </div>\n\n    </Provider>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}