{"version":3,"sources":["redux/actions.js","redux/index.js","components/RestaurantCard/RestaurantCard.js","components/Spinner/Spinner.js","components/LoaderText/LoaderText.js","components/Preloader/Preloader.js","components/ErrorPage/ErrorPage.js","components/RestaurantsListPage/RestaurantsListPage.js","redux/selectors.js","components/RestaurantsListPage/index.js","components/Input/Input.js","components/Header/Header.js","components/Header/index.js","components/Select/Select.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ACTION_TYPES","START_LOADING","STOP_LOADING","SET_LOAD_RETAURANTS_ERROR","SAVE_RESTAURANTS_LIST","SET_SEARCH_VALUE","SET_INPUT_VALUE","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","initialState","isLoading","error","restaurantsListData","inputValues","address","time","search","store","createStore","state","action","type","payload","searchValue","name","applyMiddleware","RestaurantCard","props","imageUrl","etaRange","title","categories","className","src","alt","join","defaultProps","Spinner","LoaderText","reverse","map","char","key","Preloader","ErrorPage","message","href","RestaurantsListPage","this","loadData","restaurantsData","restaurantCards","uuid","heroImageUrl","text","Component","rootSelector","selectRestaurantsList","createSelector","feedItems","storesMap","restaurantsList","filter","restaurant","searchToLowerCase","toLowerCase","startsWith","includes","selectRestauranrListError","selectIsLoading","selectInputValues","mapDispatch2Props","dispatch","fetch","then","res","json","data","saveRestaurantsList","catch","setError","finally","EnchancedListPage","connect","Input","isFocused","inputRef","createRef","handleFocus","setState","handleBlur","focusControl","current","focus","iconUrl","value","onChange","placeholder","label","controlInputWrapper","onClick","ref","onFocus","onBlur","autoComplete","PureComponent","placeHolder","Header","isMobileSearchVisible","isMobileDeliveryVisible","handleChange","target","changeInputValue","toggleSearch","toggleDelivery","closeMobileControls","mapDispatch2props","setInputValue","headerHandler","Select","onSelect","options","id","optionValue","languages","Footer","Date","getFullYear","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4898e16.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  START_LOADING: 'START_LOADING',\n  STOP_LOADING: 'STOP_LOADING',\n  SET_LOAD_RETAURANTS_ERROR: 'SET_LOAD_RETAURANTS_ERROR',\n  SAVE_RESTAURANTS_LIST: 'SAVE_RESTAURANTS_LIST',\n  SET_SEARCH_VALUE: 'SET_SEARCH_VALUE',\n  SET_INPUT_VALUE: 'SET_INPUT_VALUE'\n};\nconst startLoading = () => ({\n  type: ACTION_TYPES.START_LOADING\n});\n\nconst stopLoading = () => ({\n  type: ACTION_TYPES.STOP_LOADING\n});\n\nconst setError = error => ({\n  type: ACTION_TYPES.SET_LOAD_RETAURANTS_ERROR,\n  payload: error\n});\n\nconst saveRestaurantsList = data => ({\n  type: ACTION_TYPES.SAVE_RESTAURANTS_LIST,\n  payload: data\n});\n\nconst setInputValue = (name, value) => ({\n  type: ACTION_TYPES.SET_INPUT_VALUE,\n  payload: value,\n  name\n});\n\nexport const changeInputValue = (name, value) => dispatch => {\n  dispatch(setInputValue(name, value));\n};\n\n\nexport const loadRestaurantsList = () => dispatch => {\n  dispatch(startLoading());\n\n  fetch('https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants')\n    .then(res => res.json())\n    .then(({ data }) => {\n      dispatch(saveRestaurantsList(data));\n    })\n    .catch(error => dispatch(setError(error.message)))\n    .finally(()=> dispatch(stopLoading()));\n};\n","import { compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { applyMiddleware } from 'redux';\nimport { ACTION_TYPES } from './actions';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst middlewares = [thunk];\n\nconst initialState = {\n  isLoading: false,\n  error:null,\n  restaurantsListData: null,\n  inputValues: {\n    address: '',\n    time: '',\n    search: ''\n  }\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE_RESTAURANTS_LIST:\n      return {\n        ...state,\n        restaurantsListData: action.payload,\n        error: null\n      };\n    case ACTION_TYPES.SET_SEARCH_VALUE:\n      return {\n        ...state,\n        searchValue: action.payload\n      };\n    case ACTION_TYPES.SET_INPUT_VALUE:\n      return {\n        ...state,\n        inputValues: { \n          ...state.inputValues, \n          [action.name]: action.payload }\n      };\n    case ACTION_TYPES.SET_LOAD_RETAURANTS_ERROR :\n      return {\n        ...state,\n        error: action.payload,\n        restaurantsListData: null\n      }\n    case ACTION_TYPES.START_LOADING : \n      return {\n        ...state,\n        isLoading: true\n      }\n    case ACTION_TYPES.STOP_LOADING :\n      return {\n        ...state,\n        isLoading: false\n      }\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RestaurantCard.scss';\n\nexport const RestaurantCard = props => {\n  const { imageUrl, etaRange, title, categories } = props;\n  return (\n    <div className='restaurant-card'>\n      <div className='restaurant-card__img-wrapper'>\n        <img src={imageUrl} alt={title} className='restaurant-card__img' />\n      </div>\n      \n      <h2 className='restaurant-card__title'>{title}</h2>\n      <div className='restaurant-card__categories'>\n        {categories.join(' • ')}\n      </div>\n      <div className='restaurant-card__eta'>{etaRange}</div>\n    </div>\n  );\n};\n\nRestaurantCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  uuid: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  etaRange: PropTypes.string,\n  categories: PropTypes.arrayOf(PropTypes.string)\n};\n\nRestaurantCard.defaultProps = {\n  categories: [],\n  etaRange: ''\n};\n","import React from \"react\";\r\nimport './Spinner.scss';\r\nimport PropsTypes from 'prop-types';\r\n\r\nexport const Spinner = ({className}) => {\r\n  return (\r\n    <div className={`${className} lds-ripple`}>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nSpinner.propTypes = {\r\n    className: PropsTypes.string.isRequired\r\n}\r\n","import './LoaderText.scss';\r\nimport React from 'react';\r\nimport PropsTypes from 'prop-types';\r\n\r\nexport const LoaderText = ({className}) => {\r\n  const text = 'loading';\r\n  return (\r\n    <div className={`${className} loader-text`}>\r\n      {[...text].reverse().map(char => (\r\n        <div className='loader-text__char' key={char}>\r\n          {char}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nLoaderText.propTypes = {\r\n    className: PropsTypes.string.isRequired\r\n}\r\n","import './Preloader.scss';\r\nimport React from 'react';\r\nimport { Spinner } from '../Spinner/Spinner';\r\nimport { LoaderText } from '../LoaderText/LoaderText';\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n    <div className='preloader'>\r\n      <Spinner className='preloader__spinner'/>\r\n      <LoaderText className='preloader__loader-text'/>\r\n    </div>\r\n  );  \r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../ErrorPage/ErrorPage.scss';\n\nexport const ErrorPage = ({ message }) => {\n  return (\n    <div className='error'>\n      <h3 className='error__heading'>Oooops!</h3>\n      <p className='error__text'>Something went wrong...</p>\n      <p className='error__massage'>{`Happened due to an error: ${message}`}</p>\n      <a href='/' className='error__link'>\n        Go Home...\n      </a>\n    </div>\n  );\n};\n\nErrorPage.propTypes = {\n  message: PropTypes.string\n};\n\nErrorPage.defaultProps = {\n  message: 'Failed to fetch',\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { RestaurantCard } from '../RestaurantCard/RestaurantCard';\nimport './RestaurantsListPage.scss';\nimport { Preloader } from '../Preloader/Preloader';\nimport { ErrorPage } from '../ErrorPage/ErrorPage';\n\nconst defaultEtaRange = '20-30 min';\n\nexport class RestaurantsListPage extends Component {\n  componentDidMount() {\n    this.props.loadData();\n  }\n\n  render() {\n    const { restaurantsData, error, isLoading } = this.props;\n    const restaurantCards = restaurantsData.map(\n      ({ title, uuid, etaRange, categories, heroImageUrl }) => {\n        return (\n          <RestaurantCard\n            key={uuid}\n            title={title}\n            uuid={uuid}\n            etaRange={etaRange.text || defaultEtaRange}\n            categories={categories}\n            imageUrl={heroImageUrl}\n          />\n        );\n      }\n    );\n    if (isLoading) {\n      return <Preloader />;\n    }\n\n    if (error) {\n      return <ErrorPage message={error} />;\n    }\n\n    return <div className='restaurants-list'>{restaurantCards}</div>;\n  }\n}\n\nRestaurantsListPage.propTypes = {\n  restaurantsData: PropTypes.arrayOf(PropTypes.shape({})),\n  loadData: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  isLoading: PropTypes.bool\n};\n\nRestaurantsListPage.defaultProps = {\n  restaurantsData: [],\n  error: null,\n  isLoading: false\n};\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRestaurantsList = createSelector(\n  rootSelector,\n  ({ restaurantsListData, inputValues }) => {\n    if (!restaurantsListData) {\n      return [];\n    } else {\n      const { feedItems, storesMap } = restaurantsListData;\n      const { search } = inputValues;\n      const restaurantsList = feedItems.map(({ uuid }) => storesMap[uuid]);\n\n      if (search) {\n        const searchFilter = restaurant => {\n          const { title, categories } = restaurant;\n          const searchToLowerCase = search.toLowerCase();\n          return (\n            title.toLowerCase().startsWith(searchToLowerCase) ||\n            categories\n              .join()\n              .toLowerCase()\n              .includes(searchToLowerCase)\n          );\n        };\n\n        return restaurantsList.filter(searchFilter);\n      }\n\n      return restaurantsList;\n    }\n  }\n);\n\nexport const selectRestauranrListError = createSelector(\n  rootSelector,\n  ({ error }) => error\n);\n\nexport const selectIsLoading = createSelector(\n  rootSelector,\n  ({ isLoading }) => isLoading\n);\n\nexport const selectInputValues = createSelector(\n  rootSelector,\n  ({inputValues}) => inputValues\n);\n","import { RestaurantsListPage } from './RestaurantsListPage';\nimport { connect } from 'react-redux';\nimport { loadRestaurantsList } from '../../redux/actions';\nimport { selectRestaurantsList, selectRestauranrListError, selectIsLoading } from '../../redux/selectors';\n\nfunction mapState2Props(state) {\n  return {\n    restaurantsData: selectRestaurantsList(state),\n    error: selectRestauranrListError(state),\n    isLoading: selectIsLoading(state)\n  }\n};\n\nconst mapDispatch2Props =  {\n  loadData: loadRestaurantsList,\n};\n\nconst EnchancedListPage = connect(mapState2Props, mapDispatch2Props)(RestaurantsListPage);\n\nexport { EnchancedListPage as RestaurantsListPage };","import React, { PureComponent, createRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Input.scss\";\n\nexport class Input extends PureComponent {\n  state = {\n    isFocused: false\n  };\n  inputRef = createRef();\n\n  handleFocus = () => this.setState({ isFocused: true });\n\n  handleBlur = () => this.setState({ isFocused: false });\n\n  focusControl = () => this.inputRef.current.focus();\n\n  render() {\n    const {\n      iconUrl,\n      value,\n      onChange,\n      type,\n      name,\n      placeholder,\n      className,\n      label,\n    } = this.props;\n    const { isFocused } = this.state;\n    const controlInputWrapper = `control__input-wrapper ${\n      isFocused ? \"control__input-wrapper--focused\" : \"\"\n    } ${className}`;\n\n    return (\n      <label className=\"control__label\">\n        {!!label && <p className=\"control__headering\">{label}</p>}\n        <div className={controlInputWrapper} onClick={this.focusControl}>\n          {!!iconUrl && (\n            <img src={iconUrl} alt={placeholder} className=\"control__icon\" />\n          )}\n          <input\n            ref={this.inputRef}\n            className=\"control__input\"\n            type={type}\n            value={value}\n            name={name}\n            onChange={onChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            placeholder={placeholder}\n            autoComplete=\"off\"\n          />\n        </div>\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  iconUrl: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  label: PropTypes.string\n};\n\nInput.defaultProps = {\n  iconUrl: \"\",\n  type: \"text\",\n  placeHolder: \"\",\n  className: \"\",\n  label: \"\"\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Header.scss\";\nimport { Input } from \"../Input/Input\";\n\nexport class Header extends Component {\n  state = {\n    isMobileSearchVisible: false,\n    isMobileDeliveryVisible: false,\n  };\n\n  handleChange = ({ target }) => {\n    this.props.changeInputValue(target.name, target.value);\n  };\n\n  toggleSearch = () => {\n    this.setState(state => {\n      const { isMobileSearchVisible } = state;\n      return {\n        isMobileSearchVisible: !isMobileSearchVisible,\n        isMobileDeliveryVisible: false\n      };\n    });\n  };\n\n  toggleDelivery = () => {\n    this.setState(state => {\n      const { isMobileDeliveryVisible } = state;\n      return {\n        isMobileDeliveryVisible: !isMobileDeliveryVisible,\n        isMobileSearchVisible: false\n      };\n    });\n  };\n\n  closeMobileControls = () => {\n    this.setState({\n      isMobileDeliveryVisible: false,\n      isMobileSearchVisible: false\n    });\n  };\n\n  render() {\n    const { address, time, search } = this.props.inputValues;\n    const {\n      isMobileDeliveryVisible,\n      isMobileSearchVisible\n    } = this.state;\n\n    return (\n      <header className=\"header\">\n        <div className=\"content\">\n          <div className=\"header__inner\">\n            <img\n              src=\"./images/logo.svg\"\n              alt=\"UberEats\"\n              className=\"header__logo\"\n            />\n            <div className=\"header__delivery-info\">\n              <Input\n                name=\"address\"\n                onChange={this.handleChange}\n                value={address}\n                placeholder=\"Address\"\n                iconUrl=\"./images/place.svg\"\n              />\n              <Input\n                name=\"time\"\n                onChange={this.handleChange}\n                value={time}\n                placeholder=\"Deliver now\"\n                iconUrl=\"./images/time.svg\"\n                type=\"time\"\n              />\n            </div>\n            <div className=\"header__search\">\n              <Input\n                name=\"search\"\n                onChange={this.handleChange}\n                value={search}\n                placeholder=\"Search\"\n                iconUrl=\"./images/search.svg\"\n                className=\"header__search-input\"\n              />\n            </div>\n            <div className=\"header__toggle-buttons\">\n              <button\n                className=\"header__toggle-btn\"\n                onClick={this.toggleDelivery}\n              >\n                <img\n                  src=\"./images/place.svg\"\n                  alt=\"location\"\n                  className=\"header__toggle-icon\"\n                />\n              </button>\n              <button\n                className=\"header__toggle-btn\"\n                onClick={this.toggleSearch}\n              >\n                <img\n                  src=\"./images/search.svg\"\n                  alt=\"search\"\n                  className=\"header__toggle-icon\"\n                />\n              </button>\n            </div>\n            <a className=\"header__link\" href=\"#\">\n              Sign In\n            </a>\n          </div>\n          {(isMobileDeliveryVisible || isMobileSearchVisible) && (\n            <div className=\"header__mobile-controls mobile-controls\">\n              {isMobileSearchVisible && (\n                <div className=\"header__mobile-search\">\n                  <Input\n                    label=\"Find\"\n                    name=\"search\"\n                    onChange={this.handleChange}\n                    value={search}\n                    placeholder=\"Search\"\n                    iconUrl=\"./images/search.svg\"\n                    className=\"header__search-input\"\n                  />\n                </div>\n              )}\n\n              {isMobileDeliveryVisible && (\n                <>\n                  <Input\n                    label=\"Where\"\n                    name=\"address\"\n                    onChange={this.handleChange}\n                    value={address}\n                    placeholder=\"Address\"\n                    iconUrl=\"./images/place.svg\"\n                  />\n                  <Input\n                    label=\"To\"\n                    name=\"time\"\n                    onChange={this.handleChange}\n                    value={time}\n                    placeholder=\"Deliver now\"\n                    iconUrl=\"./images/time.svg\"\n                    type=\"time\"\n                  />\n                </>\n              )}\n              <button\n                className=\"mobile-controls__close\"\n                onClick={this.closeMobileControls}\n              >\n                <img\n                  src=\"./images/close.svg\"\n                  alt=\"close\"\n                  className=\"mobile-controls__close-btn\"\n                />\n              </button>\n            </div>\n          )}\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  changeInputValue: PropTypes.func.isRequired,\n  inputValues: PropTypes.object\n};\n\nHeader.defaultProps = {\n  inputValues: {}\n};\n","import { Header } from './Header';\nimport { changeInputValue } from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport { selectInputValues } from '../../redux/selectors';\n\nconst mapState2props = (state) => ({\n  inputValues: selectInputValues(state),\n});\n\nconst mapDispatch2props = {\n  changeInputValue\n}\n\nconst headerHandler = connect(mapState2props, mapDispatch2props)(Header);\n\nexport { headerHandler as Header };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Select.scss';\n\nexport const Select = props => {\n  const { name, onSelect, options } = props;\n  return (\n    <>\n      <img src='./images/world.svg' alt='language select' className='select__logo'/>\n      <select name={name}  onChange={onSelect} className='select__menu' id='s'>\n        {options.map(({ value: optionValue, label }) => {\n          return (\n            <option value={optionValue} className='select__option' key={optionValue}>\n              {label}\n            </option>\n          );\n        })}\n      </select>\n    </>\n  );\n};\n\nSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  onSelect: PropTypes.func,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string\n    })\n  ),\n};\n\nSelect.defaultProps = {\n  options: [],\n  onSelect: () => {}\n};\n","import React from 'react';\nimport './Footer.scss';\nimport { Select } from '../Select/Select';\n\nconst languages = [\n  {value: 'En', label: 'English'},\n  {value: 'Jp', label: 'Japanese'},\n  {value: 'Ua', label: 'Ukrainian'}\n];\nconst getYear = () => {\n  const date = new Date()\n  return date.getFullYear()\n}\n\nexport const Footer = () => {\n  return (\n    <footer className='footer'>\n      <div className='content'>\n        <div className='footer__top'>\n          <div className='footer__main'>\n            <div className='footer__logo-lang'>\n              <img\n                className='footer__logo'\n                src='./images/logo-white.svg'\n                alt='uber eats'\n              />\n              <div className='select'>\n              <Select name='Language' options={languages} />\n              </div>\n            </div>\n\n            <div className='footer__mobile-apps'>\n              <a href='#' className='footer__mobile-app'>\n                <img src='./images/appstore.png' alt='appstore' />\n              </a>\n              <a href='#' className='footer__mobile-app'>\n                <img src='./images/googleplay.png' alt='googleplay' />\n              </a>\n            </div>\n          </div>\n\n          <div className='footer__top-links links'>\n            <a className='links__link links__link--weight' href='#'>\n              About UberEats\n            </a>\n            <a className='links__link' href='#'>\n              Read our blog\n            </a>\n            <a className='links__link' href='#'>\n              Sign up to deliver\n            </a>\n            <a className='links__link' href='#'>\n              Add your restaurant\n            </a>\n          </div>\n          <div className='footer__top-links links'>\n            <a className='links__link links__link--weight' href='#'>Get help</a>\n            <a className='links__link' href='#'>Read FAQs</a>\n            <a className='links__link' href='#'>View all cities</a>\n          </div>\n        </div>\n\n        <div className='footer__separator'></div>\n\n        <div className='footer__bottom'>\n          <p className='footer__copyrights'>© {getYear()} Uber Technologies Inc.</p>\n          <div className='footer__misc'>\n            <div className='footer__bottom-links links'>\n              <a className='links__link' href='#'>\n                Privacy policy\n              </a>\n              <a className='links__link' href='#'>\n                Terms of use\n              </a>\n              <a className='links__link' href='#'>\n                Pricing\n              </a>\n            </div>\n\n            <div className='footer__social  social'>\n              <a className='social__link' href='#'>\n                <img src='./images/fb.svg' alt='facebook'/>\n              </a>\n              <a className='social__link' href='#'>\n                <img src='./images/twitter.svg' alt='twitter'/>\n              </a>\n              <a className='social__link' href='#'>\n                <img src='./images/instagram.svg' alt='instagram'/>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/index';\nimport { RestaurantsListPage } from './components/RestaurantsListPage/index';\nimport { Header } from './components/Header/index';\nimport { Footer } from './components/Footer/Footer';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <main className=\"content\">\n          <RestaurantsListPage />\n        </main>\n        <Footer />\n      </div>\n\n    </Provider>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}